plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.6.0'
}

group = 'com.demo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

springBoot {
	buildInfo()
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	// ===== Spring Boot Starters =====
	implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// ===== OpenAPI / Swagger =====
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.21'

	// ===== Database =====
	runtimeOnly 'com.h2database:h2'
	implementation 'org.flywaydb:flyway-core'

	// ===== MapStruct & Lombok =====
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// ===== Testing =====
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// ======== FIX LOGGING CONFLICTS ========
configurations.all {
	exclude group: 'ch.qos.logback', module: 'logback-classic'
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

// ======== OPENAPI GENERATION ========
openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/static/openapi/catalogue.yaml".toString()
	outputDir = layout.buildDirectory.dir("generated").get().asFile.path
	apiPackage = "com.example.api"
	modelPackage = "com.example.model"
	configOptions = [
			interfaceOnly       : "true",
			skipDefaultInterface: "false",
			useJakartaEe        : "true",
			useBeanValidation   : "false",
			useTags             : "true"
	]
}

tasks.named("compileJava") {
	dependsOn tasks.named("openApiGenerate")
}

tasks.openApiValidate {
	inputSpec.set("$rootDir/src/main/resources/openapi/catalogue.yaml")
}

sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/src/main/java"
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
